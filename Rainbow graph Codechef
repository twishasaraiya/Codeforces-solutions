Problem Statement=>https://www.codechef.com/problems/RAINBOW

#include<iostream>
#include<bits/stdc++.h>
using namespace std;
int main()
{
	int t;
	cin>>t;
	while(t--){
		int n,i,j;
		cin>>n;
		int a[n+1][n+1];
		for(i=1;i<=n;i++){
			for(j=1;j<=n;j++){
				cin>>a[i][j];
			}
		}
		int f[n+1]; //assume all nodes are good
		for(i=1;i<=n;i++)
		f[i]=1;
		int flag=0;
		while(1)
		{
			flag=0;
			for(i=1;i<=n;i++)
			{
				set<int> c;       //for each node create set of edges of different color
				if(f[i]==0)
				continue;
				for(j=1;j<=n;j++)
				{
					if(i==j || a[i][j]==-1) //if self-loop exists or there is no such edge then continue
					continue;
					c.insert(a[i][j]);
				}
				//cout<<i<<" "<<c.size()<<endl;
				if(c.size()<2) //there must be atleast 2 edges of different color
				{
					flag=1;
					for(j=1;j<=n;j++)
					{
						a[i][j]=-1;
						a[j][i]=-1;
					}
					f[i]=0;//remove bad node from graph
				}
			}
			if(flag==0) //till there are no bad nodes
			break;
		}
		int ans=0;
		for(i=1;i<=n;i++)
		{
			ans+=f[i];
		}
		if(ans<3)
		ans=0;
		cout<<ans<<"\n";
 }
	return 0;
}
