PROBLEM LINK: https://www.codechef.com/OCT17/problems/CHEFCOUN

CONTEST: OCTOBER CHALLENGE 2017

SOLUTION:
#include<iostream>
#include<string>
#include<bits/stdc++.h>
#include<algorithm>
#include<math.h>
#include<vector>
#include<stdio.h>
#include<queue>
#include<map>
#include<iterator>
#include<climits>
#define ll long long
#define ull unsigned long long
using namespace std;
const int maxn=100001;
//const ll mod=1000000007;
//const ll INF=1000000005;
const unsigned int bigInt=UINT_MAX;
int main()
{
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        int a[n];
        int val=(UINT_MAX)/n;
        int rem=(UINT_MAX)%n;

        a[0]=1;
        for(int i=1;i<n;i++){
            a[i]=val;
            if(i<=rem)
            a[i]+=1;
        }
        for(int i=0;i<n;i++){
            printf("%d ",a[i]);
        }
        cout<<endl;
    }
    return 0;
}
 
 We want the sum to be equal to 2^32 so that when we take modulo2^32 it return zero.
 We assign the first element of array to be 1 and then distribute the sum(2^32) among other elements.
 It may occur that 2^32(UINT_MAX) is not completely divisible by n
 So we need to distribute the remainder also among the elements.
