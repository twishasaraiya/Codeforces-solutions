COMPANY TAGS:
Accolite    Amazon    Directi    Flipkart    Goldman-Sachs    Intuit    MakeMyTrip    Microsoft    Ola-Cabs    Oracle    Paytm    Pubmatic    Quikr    Sapinet    Swiggy    Walmart labs



The cost of a stock on each day is given in an array, find the max profit that you can make by buying and selling in those days. 

Input:
First line contains number of test cases T. Each test case contain the integer value 'N' denoting days followed by an array of stock prices in N days.
Output:
The maximum profit is displayed as shown below. And if there is no profit then print "No Profit".


Constraints:
1 <=T<= 100
2 <=N<= 100
1 <=arr[i]<= 10000


Example

Input:
2
7
100 180 260 310 40 535 695
10
23 13 25 29 33 19 34 45 65 67

Output:

(0 3) (4 6) 
(1 4) (5 9) 
Notice: Output format is as follows - (buy_day sell_day) (buy_day sell_day)
For each input, output should be in a single line.

SOLUTION
#include <stdio.h>
#include<iostream>

using namespace std;

struct node{
    int buy,sell;
};

int main() {
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        int a[n],i;
        for(i=0;i<n;i++){
            cin>>a[i];
        }
        node ans[n/2 + 1];
        i=0;
        int cnt=0;
        while(i<n-1){
            //local minima
            while(i<n-1 && a[i+1]<a[i])
                i++;
            
            if(i==n-1)
                break;
            
            ans[cnt].buy=i++;
            //local maxima
            while(i<n && a[i]>a[i-1])
                i++;
            
            ans[cnt++].sell=i-1;
        }
        if(cnt==0){
            printf("No Profit\n");
        }
        else{
            for(i=0;i<cnt;i++)
                printf("(%d %d) ",ans[i].buy,ans[i].sell);
            printf("\n");
        }
    }
	return 0;
}
