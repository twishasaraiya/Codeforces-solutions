PROBLEM LINK:https://www.hackerrank.com/contests/gs-codesprint/challenges/trader-profit/problem

TAGS:DP

 dp[i][j] represent maximum profit using at most t transactions up to day  i(including day i)
SOLUTION
#include <bits/stdc++.h>
#include<algorithm>
using namespace std;

int traderProfit(int k, int n, vector <int> a) {
    int dp[k+1][n+1];
    for(int i=0;i<=k;i++)
        dp[i][0]=0;
    for(int j=0;j<=n;j++)
        dp[0][j]=0;
    for(int i=1;i<=k;i++){
        for(int j=1;j<n;j++){
            int max_so_far=0;
            for(int m=0;m<j;m++)
                max_so_far=max(max_so_far,a[j]-a[m]+dp[i-1][m]);
           dp[i][j]=max(dp[i][j-1],max_so_far);
        }
    }
    return dp[k][n-1];
}

int main() {
    int q;
    cin >> q;
    for(int a0 = 0; a0 < q; a0++){
        int k;
        cin >> k;
        int n;
        cin >> n;
        vector<int> arr(n);
        for(int arr_i = 0; arr_i < n; arr_i++){
           cin >> arr[arr_i];
        }
        int result = traderProfit(k, n, arr);
        cout << result << endl;
    }
    return 0;
}
