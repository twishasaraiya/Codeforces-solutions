http://codeforces.com/contest/767/problem/A
A. Snacktower
It is enough to do what is written in the statements. You can maintain an array has, and mark in it which snacks has already fallen, and which hasn't. Create another variable next which tracks the next snack which should be put on the top. Let's proceed with the integers in the input one by one. After reading next integer, mark it in the has array and go from next to the first snack which is not marked. Print all integers which we passed by.

SOLUTION
#include<iostream>
#include<algorithm>
#include<string>
#include<cstdio>
#include<set>
#include<map>
#include<stack>
using namespace std;

int main()
{
  int n;
  cin>>n;
  int has[n+1]={0};
  int a[n+1],i,m;
  for(i=1;i<=n;i++)
  {
    cin>>a[i];
  }
  m=n;
  for(i=1;i<=n;i++)
  {
    if(a[i]==m)
    {
      cout<<a[i]<<" ";
      m--;
      while(has[m]==1 && m>0)
      {
        cout<<m<<" ";
        has[m]=0;
        m--;
      }
      cout<<endl;
    }
    else
    {
      has[a[i]]=1;
        cout<<endl;
    }
  }
  return 0;
}
